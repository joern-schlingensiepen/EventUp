@model EventUpLib.Service

@{
    ViewBag.Title = "Delete";
}
@Html.HiddenFor(model => model.isOfferedById)

<h2>Delete</h2>

<h3>Are you sure you want to delete this?</h3>
<style>
    .details-container {
        display: flex;
        flex-wrap: wrap;
    }

    .details-column {
        flex: 1;
        margin-right: 20px;
    }

    .details-column h3 {
        color: #632033; /*text color h3 */
    }

    .details-label {
        font-weight: bold;
        margin-bottom: 5px;
    }

    .details-item {
        display: flex;
        align-items: stretch;
        margin-bottom: 10px;
    }

    .details-value {
        margin-left: 10px;
    }
</style>

<br />

<div class="details-container">
    <div class="details-column">
        <div class="details-item">
            <div class="details-label">Event name:</div>
            <div class="details-value">@Html.DisplayFor(model => model.Name)</div>
        </div>


        <div class="details-item">
            <div class="details-label">City:</div>
            <div class="details-value">@Html.DisplayFor(model => model.City)</div>
        </div>

        <div class="details-item">
            <div class="details-label">Address:</div>
            <div class="details-value">
                @if (string.IsNullOrWhiteSpace(Model.Address))
                {
                    @Html.Raw("----------")
                }
                else
                {
                    @Html.DisplayFor(model => model.Address)
                }
            </div>
        </div>

        <div class="details-item">
            <div class="details-label">Service Type:</div>
            <div class="details-value">
                @if (string.IsNullOrWhiteSpace(Model.Typ_Service))
                {
                    @Html.Raw("----------")
                }
                else
                {
                    @Html.DisplayFor(model => model.Typ_Service)
                }
            </div>
        </div>

        <div class="details-item">
            <div class="details-label">Event Type:</div>
            <div class="details-value">
                @if (string.IsNullOrWhiteSpace(Model.Typ_Event))
                {
                    @Html.Raw("----------")
                }
                else
                {
                    @Html.DisplayFor(model => model.Typ_Event)
                }
            </div>
        </div>

        <!-- Agrega más campos según sea necesario -->
    </div>

    <div class="details-column">
        <div class="details-item">
            <div class="details-label">Capacity [Persons]:</div>
            <div class="details-value">
                @if (Model.Capacity == null || Model.Capacity == 0)
                {
                    @Html.Raw("----------")
                }
                else
                {
                    @Html.DisplayFor(model => model.Capacity)
                }
            </div>
        </div>

        <div class="details-item">
            <div class="details-label">Fix Cost [Euro]:</div>
            <div class="details-value">
                @if (Model.FixCost == null || Model.FixCost == 0)
                {
                    @Html.Raw("----------")
                }
                else
                {
                    @Html.DisplayFor(model => model.FixCost)
                }
            </div>
        </div>

        <div class="details-item">
            <div class="details-label">Person Cost [Euro/person]:</div>
            <div class="details-value">
                @if (Model.PersonCost == null || Model.PersonCost == 0)
                {
                    @Html.Raw("----------")
                }
                else
                {
                    @Html.DisplayFor(model => model.PersonCost)
                }
            </div>
        </div>

        <div class="details-item">
            <div class="details-label">Hour Cost [Euro/h]:</div>
            <div class="details-value">
                @if (Model.HourCost == null || Model.HourCost == 0)
                {
                    @Html.Raw("----------")
                }
                else
                {
                    @Html.DisplayFor(model => model.HourCost)
                }
            </div>
        </div>

        <div class="details-item">
            <div class="details-label">More:</div>
            <div class="details-value">
                @if (string.IsNullOrWhiteSpace(Model.More))
                {
                    @Html.Raw("----------")
                }
                else
                {
                    @Html.DisplayFor(model => model.More)
                }
            </div>
        </div>


    </div>
</div>
<div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-actions no-color">
        <input type="submit" value="Delete" class="btn btn-primary" /> |
        @Html.ActionLink("Back to List", "MyServices")
    </div>
    }
</div>




