@model EventUpWebApp.Models.EventViewModel

@{
    ViewBag.Title = "Create";
}
<link rel="stylesheet" href="~/Content/font-awesome.css" />
<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Event</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row">
        <div class="col-md-6">
           
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />

            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.Typ_Event, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    <p style="font-style: italic; font-size:small;margin-bottom: 5px;">(Please select the type of event)</p>
                    <div style="display: flex; align-items: center;">
                        <div style="flex-grow: 1;">
                            @Html.DropDownListFor(model => model.Typ_Event, ((List<SelectListItem>)ViewBag.TypEventOptions) ?? new List<SelectListItem>(), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Typ_Event, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="form-actions no-color">
                <a href="@Url.Action("MyEvents", "Events", new { id = ViewBag.SelectedEventId })">
                    <i class="fa fa-arrow-left"></i> Back to list
                </a>
            </div>
        </div>
        <div class="col-md-6">
           
            <div class="form-group">
                @Html.LabelFor(model => model.NumberOfGuest, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.NumberOfGuest, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NumberOfGuest, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.Budget, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Budget, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Budget, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.Start_DateTime, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Start_DateTime, new { htmlAttributes = new { @class = "form-control", type = "datetime-local" } })
                    @Html.ValidationMessageFor(model => model.Start_DateTime, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.End_DateTime, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.End_DateTime, new { htmlAttributes = new { @class = "form-control", type = "datetime-local" } })
                    @Html.ValidationMessageFor(model => model.End_DateTime, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </div>

    <br />
    

</div>

}


@section Scripts {
    @Scripts.Render("~/Scripts/dateANDhour.js")
 }
